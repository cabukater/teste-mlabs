import { ComponentFixture, TestBed } from '@angular/core/testing';
import { ModalAlertComponent } from './modal-alert.component';
import { BsModalRef } from 'ngx-bootstrap/modal';
import { EventEmitter } from '@angular/core';

describe('ModalAlertComponent', () => {
  let component: ModalAlertComponent;
  let fixture: ComponentFixture<ModalAlertComponent>;

  beforeEach(async () => {
    await TestBed.configureTestingModule({
      declarations: [ ModalAlertComponent ],
      providers: [
        { provide: BsModalRef, useValue: { hide: () => {} } }
      ]
    })
    .compileComponents();
  });

  beforeEach(() => {
    fixture = TestBed.createComponent(ModalAlertComponent);
    component = fixture.componentInstance;
    fixture.detectChanges();
  });

  it('should create', () => {
    expect(component).toBeTruthy();
  });

  it('should emit a boolean value when onConfirm is called', () => {
    // Arrange
    const confirmEmitter = new EventEmitter<boolean>();
    component.confirm = confirmEmitter;
    const spy = spyOn(confirmEmitter, 'emit');
    const value = true;

    // Act
    component.onConfirm(value);

    // Assert
    expect(spy).toHaveBeenCalledWith(value);
  });

  it('should hide the modal when onConfirm is called', () => {
    // Arrange
    const bsModalRef = TestBed.inject(BsModalRef);
    const spy = spyOn(bsModalRef, 'hide');

    // Act
    component.onConfirm(true);

    // Assert
    expect(spy).toHaveBeenCalled();
  });
});
